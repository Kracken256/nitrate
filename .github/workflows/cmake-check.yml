name: CMake check

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        build_type: [Release]
        c_compiler: [gcc, clang]
        include:
          - os: ubuntu-22.04
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-22.04
            c_compiler: clang
            cpp_compiler: clang++
        exclude: []

    steps:
    - uses: actions/checkout@v4

    - name: Cache CMake build
      id: cmake-cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/build
          ~/.ccache  # Optional: cache for compiler cache if you use ccache
        key: ${{ runner.os }}-${{ matrix.c_compiler }}-${{ matrix.build_type }}-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.c_compiler }}-${{ matrix.build_type }}-

    - name: Dump OS information
      run: |
        echo "OS: ${{ runner.os }}"
        echo "OS Version: ${{ runner.os_version }}"
        echo "Architecture: ${{ runner.arch }}"
        cat /etc/os-release
      shell: bash

    - name: Install dependencies
      run: |
        sudo apt clean
        sudo apt update --fix-missing && sudo apt upgrade -y
        sudo apt install -y cmake make clang llvm-14 upx gnupg2 dpkg-dev
        sudo apt install -y libssl-dev libboost-all-dev libzstd-dev libclang-common-14-dev \
                            rapidjson-dev libdeflate-dev libreadline-dev libclang-dev      \
                            libclang-cpp-dev nlohmann-json3-dev libgoogle-glog-dev libunwind-dev
      shell: bash

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCOVERAGE=OFF
        -DSTRIP_OUTPUT=ON
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}

    - name: Save CMake Cache
      if: steps.cmake-cache.outputs.cache-hit != 'true'
      uses: actions/cache@v3
      with:
        path: ${{ steps.strings.outputs.build-output-dir }}
        key: ${{ runner.os }}-${{ matrix.c_compiler }}-${{ matrix.build_type }}-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}
